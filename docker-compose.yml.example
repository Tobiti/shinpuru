version: '3'

services:
  traefik:
    image: 'traefik:latest'
    command:
      - '--providers.docker'
      - '--providers.file.directory=/etc/traefik/dynamic_conf'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.https.address=:443'
      - '--providers.docker.exposedByDefault=false'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './traefik/config:/etc/traefik/dynamic_conf'
      - '/etc/cert:/etc/cert:ro'
    restart: always

  minio:
    image: 'minio/minio:latest'
    expose:
      - '9000'
    volumes:
      - './minio/data:/data'
    environment:
      MINIO_ACCESS_KEY: 'minio_access_key'
      MINIO_SECRET_KEY: 'minio_secret_key'
      MINIO_REGION_NAME: 'us-east-1'
    command: server /data # --certs-dir /etc/cert
    restart: always

  redis:
    image: 'redis:latest'
    expose:
      - '6379'
    restart: always

  mysql:
    image: 'mariadb:latest'
    expose:
      - '3306'
    environment:
      MYSQL_ROOT_PASSWORD: mysql_root_password
      MYSQL_DATABASE: shinpuru
    volumes:
      - './mysql/cfg:/etc/mysql'
      - './mysql/lib:/var/lib/mysql'
    restart: always

  shinpuru:
    build: '.'
    image: 'ghcr.io/zekrotja/shinpuru:latest'
    volumes:
      - './shinpuru/config:/etc/config'
      - '/etc/cert:/etc/cert'
    expose:
      - '8080'
    environment:
      # Discord Config
      SP_DISCORD_TOKEN: <discord_token>
      SP_DISCORD_GENERALPREFIX: sp!
      SP_DISCORD_OWNERID: <your_user_id>
      SP_DISCORD_CLIENTID: <application_id>
      SP_DISCORD_CLIENTSECRET: <client_secret>
      # Database
      SP_DATABASE_TYPE: mysql
      SP_DATABASE_MYSQL_HOST: mysql
      SP_DATABASE_MYSQL_USER: root
      SP_DATABASE_MYSQL_PASSWORD: mysql_root_password
      SP_DATABASE_MYSQL_DATABASE: shinpuru
      # Cache
      SP_CACHE_REDIS_ADDR: redis:6379
      SP_CACHE_REDIS_TYPE: 0
      SP_CACHE_CACHEDATABASE: 1
      # Storage
      SP_STORAGE_TYPE: minio
      SP_STORAGE_MINIO_ENDPOINT: minio:9000
      SP_STORAGE_MINIO_ACCESSKEY: minio_access_key
      SP_STORAGE_MINIO_ACCESSSECRET: minio_secret_key
      SP_STORAGE_MINIO_LOCATION: us-east-1
      SP_STORAGE_MINIO_SECURE: 0
      # Logging
      SP_LOGGING_COMMANDLOGGING: 1
      SP_LOGGING_LOGLEVEL: 4
      # Webserver
      SP_WEBSERVER_ENABLED: 1
      SP_WEBSERVER_ADDR: 0.0.0.0:8080
      SP_WEBSERVER_PUBLICADDR: https://example.com
    restart: always
    depends_on:
      - mysql
      - redis
      - minio
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.shinpuru.entrypoints=https'
      - 'traefik.http.routers.shinpuru.tls=true'
      - 'traefik.http.routers.shinpuru.rule=Host(`example.com`)'

  ###############################################################################
  # The following two services are only important if
  # you want to monitor metrics of your shinpuru
  # instance using prometheus and grafana.

  # prometheus:
  #   image: 'prom/prometheus:latest'
  #   expose:
  #     - '9090'
  #   volumes:
  #     # Change this if you want to use another prometheus config.
  #     - './config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
  #   restart: always

  # grafana:
  #   image: 'grafana/grafana'
  #   expose:
  #     - '3000'
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.http.routers.grafana.entrypoints=https'
  #     - 'traefik.http.routers.grafana.tls=true'
  #     - 'traefik.http.routers.grafana.rule=Host(`grafana.example.com`)'
